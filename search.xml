<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>EFS - using shared AWS volumes</title>
      <link href="/2019/10/30/EFS-using-shared-AWS-volumes/"/>
      <url>/2019/10/30/EFS-using-shared-AWS-volumes/</url>
      
        <content type="html"><![CDATA[<ol><li>Update your application’s Helm chart <code>values.yaml</code> to include the following lines:<figure class="hljs highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">persistence:</span></span><br><span class="line"><span class="symbol">  enabled:</span> true</span><br><span class="line"><span class="symbol">  annotations:</span></span><br><span class="line">    <span class="string">"helm.sh/resource-policy"</span>: keep</span><br><span class="line"><span class="symbol">  storageClass:</span> <span class="string">"efs"</span></span><br><span class="line"><span class="symbol">  accessMode:</span> ReadWriteMany</span><br><span class="line"><span class="symbol">  size:</span> <span class="number">1</span>Gi</span><br><span class="line">  <span class="meta"># existingClaim: <span class="string">"frontend-test-pvc"</span></span></span><br></pre></td></tr></table></figure></li></ol><p><strong>IMPORTANT!</strong> <em>The <code>existingClaim</code> definition <strong>must</strong> remain commented-out only on the first run of the package installation (the first time you execeute <code>helm install ./helm-chart/</code>). Later in the steps you will enable it so that the application can reuse the already created PVC and not create new one each time it is installed!</em></p><ol start="2"><li>Edit your applications <code>Deployment</code> template (usually in helm chart that’s <code>helm-chart/templates/deployment.yaml</code>) to include the following lines that check if persistence is enabled in <code>values.yaml</code> and in case it is, it enables the volume and volumeMount switches of the deployment:<figure class="hljs highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">46 </span>        - containerPort: <span class="number">80</span></span><br><span class="line"><span class="symbol">47 </span>          protocol: TCP</span><br><span class="line"><span class="symbol">48 </span>        &#123;&#123; <span class="keyword">if</span> (.Values.env) &#125;&#125;</span><br><span class="line"><span class="symbol">49 </span>        env:</span><br><span class="line"><span class="symbol">50 </span>        - <span class="keyword">name</span>: env</span><br><span class="line"><span class="symbol">51 </span>          value: &#123;&#123; .Values.env &#125;&#125;</span><br><span class="line"><span class="symbol">52 </span>        &#123;&#123; <span class="keyword">end</span> &#125;&#125;</span><br><span class="line"><span class="symbol">53 </span>        &#123;&#123; <span class="keyword">if</span> (.Values.persistence.enabled) &#125;&#125;</span><br><span class="line"><span class="symbol">54 </span>        volumeMounts:</span><br><span class="line"><span class="symbol">55 </span>          - <span class="keyword">name</span>: efs</span><br><span class="line"><span class="symbol">56 </span>            mountPath: /mnt</span><br><span class="line"><span class="symbol">57 </span>        &#123;&#123; <span class="keyword">end</span> &#125;&#125;</span><br><span class="line"><span class="symbol">58 </span>        livenessProbe:</span><br><span class="line"><span class="symbol">59 </span>          httpGet:</span><br><span class="line"><span class="symbol">60 </span>            path: /</span><br><span class="line"><span class="symbol">61 </span>            port: <span class="number">9200</span></span><br><span class="line"><span class="symbol">62 </span>            scheme: <span class="string">"HTTP"</span></span><br><span class="line"><span class="symbol">63 </span>          &#123;&#123; <span class="keyword">if</span> <span class="keyword">and</span> (.Values.env)  (eq .Values.env <span class="string">"dev"</span>) &#125;&#125;</span><br><span class="line"><span class="symbol">64 </span>          initialDelaySeconds: <span class="number">120</span></span><br><span class="line"><span class="symbol">65 </span>          &#123;&#123; <span class="keyword">else</span> &#125;&#125;</span><br><span class="line"><span class="symbol">66 </span>          initialDelaySeconds: <span class="number">30</span></span><br><span class="line"><span class="symbol">67 </span>          &#123;&#123; <span class="keyword">end</span> &#125;&#125;</span><br></pre></td></tr></table></figure>What you need to add is the lines between 53 to 57. </li></ol><p><strong>IMPORTANT!</strong> <em>Make sure to keep the appropriate indentation of lines, otherwise you might make the YAML invalid !!</em></p><p>Next, go to the bottom of the <code>deployment.yaml</code> and add the following snippet:</p><figure class="hljs highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123; <span class="keyword">if</span> (.Values.persistence.enabled) &#125;&#125;</span></span><br><span class="line"><span class="symbol">volumes:</span></span><br><span class="line">  - <span class="symbol">name:</span> efs</span><br><span class="line">    <span class="symbol">persistentVolumeClaim:</span></span><br><span class="line">      <span class="symbol">claimName:</span> frontend-test-pvc</span><br><span class="line"><span class="template-variable">&#123;&#123; <span class="keyword">end</span> &#125;&#125;</span></span><br></pre></td></tr></table></figure><p><strong>IMPORTANT!</strong> <em>Make sure  to change the <code>claimName</code> pointer to the name of your PVC!</em></p><ol start="3"><li>Create the PVC resource under your helm package <code>templates/</code> directory and make sure it looks similar to:<figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">cat</span> <span class="string">helm-chart/templates/efs-pvc.yaml</span> </span><br><span class="line"></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">and</span> <span class="string">.Values.persistence.enabled</span> <span class="string">(not</span> <span class="string">.Values.persistence.existingClaim)</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">.Values.persistence.annotations</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line"><span class="string">&#123;&#123;</span> <span class="string">toYaml</span> <span class="string">.Values.persistence.annotations</span> <span class="string">| indent 4 &#125;&#125;</span></span><br><span class="line"><span class="string"><span class="template-variable">&#123;&#123;- end &#125;&#125;</span></span></span><br><span class="line"><span class="string"></span><span class="attr">  name:</span> <span class="string">frontend-test-pvc</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">&#123;&#123;</span> <span class="string">template</span> <span class="string">"frontend-test-sysadmin.name"</span> <span class="string">.</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">    chart:</span> <span class="string">&#123;&#123;</span> <span class="string">template</span> <span class="string">"frontend-test-sysadmin.chart"</span> <span class="string">.</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">    release:</span> <span class="string">"<span class="template-variable">&#123;&#123; .Release.Name &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">    heritage:</span> <span class="string">"<span class="template-variable">&#123;&#123; .Release.Service &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">&#123;&#123;</span> <span class="string">.Values.persistence.accessMode</span> <span class="string">| quote &#125;&#125;</span></span><br><span class="line"><span class="string"></span><span class="attr">  resources:</span></span><br><span class="line"><span class="attr">    requests:</span></span><br><span class="line"><span class="attr">      storage:</span> <span class="string">&#123;&#123;</span> <span class="string">.Values.persistence.size</span> <span class="string">| quote &#125;&#125;</span></span><br><span class="line"><span class="string"><span class="template-variable">&#123;&#123;- if .Values.persistence.storageClass &#125;&#125;</span></span></span><br><span class="line"><span class="string"><span class="template-variable">&#123;&#123;- if (eq "-" .Values.persistence.storageClass) &#125;&#125;</span></span></span><br><span class="line"><span class="string"></span><span class="attr">  storageClassName:</span> <span class="string">""</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">else</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">"<span class="template-variable">&#123;&#123; .Values.persistence.storageClass &#125;&#125;</span>"</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>IMPORTANT!</strong> <em>Again, make sure to update the values related to the application name (e.g. <em>frontend-test-sysadmin</em>) to match your application name!</em></p><ol start="4"><li>Run <code>helm install</code> for your helm package and check the output of the command. You need to make sure that the <code>PersistentVolumeClaim</code> resource was created:<figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ helm <span class="keyword">install</span> ./helm-chart/</span><br><span class="line"><span class="keyword">NAME</span>:   crabby-umbrellabird</span><br><span class="line"><span class="keyword">LAST</span> DEPLOYED: Mon <span class="keyword">Oct</span> <span class="number">14</span> <span class="number">12</span>:<span class="number">41</span>:<span class="number">32</span> <span class="number">2019</span></span><br><span class="line">NAMESPACE: <span class="keyword">default</span></span><br><span class="line"><span class="keyword">STATUS</span>: DEPLOYED</span><br><span class="line"></span><br><span class="line">RESOURCES:</span><br><span class="line">==&gt; v1/Deployment</span><br><span class="line"><span class="keyword">NAME</span>                                        READY  UP-<span class="keyword">TO</span>-<span class="built_in">DATE</span>  AVAILABLE  AGE</span><br><span class="line">crabby-umbrellabird-frontend-<span class="keyword">test</span>-sysadmin  <span class="number">0</span>/<span class="number">1</span>    <span class="number">1</span>           <span class="number">0</span>          <span class="number">1</span>s</span><br><span class="line"></span><br><span class="line">==&gt; v1/PersistentVolumeClaim</span><br><span class="line"><span class="keyword">NAME</span>               <span class="keyword">STATUS</span>   VOLUME  <span class="keyword">CAPACITY</span>  <span class="keyword">ACCESS</span> MODES  STORAGECLASS  AGE</span><br><span class="line">frontend-<span class="keyword">test</span>-pvc  Pending  efs     <span class="number">1</span>s</span><br></pre></td></tr></table></figure>As soon as the PVC becomes Ready and provisioned by the storage provisioner, it should be attached to your pod inside the <code>/mnt</code> directory:<figure class="hljs highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">k</span> <span class="string">get</span> <span class="string">pod</span> <span class="string">toned-mouse-frontend-test-sysadmin-569c46cf5f-9ljlx</span> <span class="bullet">-o</span> <span class="string">yaml</span> <span class="string">| grep efs -C 2</span></span><br><span class="line"><span class="string"></span><span class="attr">    volumeMounts:</span></span><br><span class="line"><span class="attr">    - mountPath:</span> <span class="string">/mnt</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">efs</span></span><br><span class="line"><span class="attr">    - mountPath:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">default-token-fhc5f</span></span><br><span class="line"><span class="bullet">-</span><span class="bullet">-</span></span><br><span class="line"><span class="attr">    tolerationSeconds:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">  volumes:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">efs</span></span><br><span class="line"><span class="attr">    persistentVolumeClaim:</span></span><br><span class="line"><span class="attr">      claimName:</span> <span class="string">frontend-test-pvc</span></span><br></pre></td></tr></table></figure>From inside the pod:<figure class="hljs highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ k exec -it toned-mouse-frontend-test-sysadmin-569c46cf5f-9ljlx bash</span><br><span class="line">groups: cannot <span class="builtin-name">find</span> name <span class="keyword">for</span><span class="built_in"> group </span>ID 40005</span><br><span class="line">root@toned-mouse-frontend-test-sysadmin-569c46cf5f-9ljlx:/# df -hT /mnt</span><br><span class="line">Filesystem                                                                                                              <span class="built_in"> Type </span> Size  Used Avail Use% Mounted on</span><br><span class="line">fs-fc88d2a5.efs.eu-central-1.amazonaws.com:/persistentvolumes/frontend-test-pvc-pvc-b27363e2-ee6f-11e9-ab38-0241c3428c80 nfs4  8.0E   45M  8.0E   1% /mnt</span><br><span class="line">root@toned-mouse-frontend-test-sysadmin-569c46cf5f-9ljlx:/#</span><br></pre></td></tr></table></figure></li><li>You should now update your application’s <code>values.yaml</code> once more and uncomment the <code>existingClaim</code> definition, since you already have one created , where files persist over restarts and redeployments of the application’s different versions (upgrades). </li></ol><p>Every next <code>helm install</code> or <code>helm upgrade</code> of your helm package will result in starting your application with the already created PVC.</p><p>You may also notice the <code>&quot;helm.sh/resource-policy&quot;: keep</code> annotation inside the PVC resource, which instructs Tiller (helm server side) to <strong>not</strong> remove the resource, when the helm package is deleted:</p><figure class="hljs highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ helm del --purge nordic-angelfish</span><br><span class="line">These resources were kept due <span class="keyword">to</span> the<span class="built_in"> resource </span>policy:</span><br><span class="line">[PersistentVolumeClaim] frontend-test-pvc</span><br><span class="line"></span><br><span class="line">release <span class="string">"nordic-angelfish"</span> deleted</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tutorials </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aws </tag>
            
            <tag> efs </tag>
            
            <tag> nfs </tag>
            
            <tag> storage </tag>
            
            <tag> kubernetes </tag>
            
            <tag> helm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deploying Drupal + CiviCRM on an AWS EC2 </title>
      <link href="/2019/10/29/Deploy-Drupal-on-AWS/"/>
      <url>/2019/10/29/Deploy-Drupal-on-AWS/</url>
      
        <content type="html"><![CDATA[<p><em>This guide assumes that you already have an AWS EC2 micro instance started and installed with Linux OS (we’ll use Ubuntu 16.04 as our OS of choice for this guide)</em></p><hr><h2 id="Install-the-LEMP-stack"><a href="#Install-the-LEMP-stack" class="headerlink" title="Install the LEMP stack"></a>Install the LEMP stack</h2><p>We’ll be setting up a Drupal environment based on the LEMP (Linux, nginx, mysql, php) stack. </p><p>First we’ll start by installing nginx, MySQL 5.7 DB and PHP-fpm 5.6 processor </p><figure class="hljs highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ apt-<span class="builtin-name">get</span> install nginx</span><br><span class="line">$ apt-<span class="builtin-name">get</span> install mysql-server-5.7</span><br><span class="line">$ apt-<span class="builtin-name">get</span> install php5.6-fpm</span><br></pre></td></tr></table></figure><p>In order to run Drupal 7 + CiviCRM (latest) you need to install some extra PHP modules to your existing PHP installation. </p><p>We’ll use some additional Ubuntu repositories for getting the PHP modules for Ubuntu Xenial installed. </p><p>Add the repo to <code>apt</code> list with:</p><figure class="hljs highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$<span class="built_in"> add-apt-repository </span>ppa:ondrej/php</span><br></pre></td></tr></table></figure><p>Make sure the repo was added after accepting the key:</p><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/apt/sources<span class="selector-class">.list</span><span class="selector-class">.d</span>/ondrej-ubuntu-php-xenial<span class="selector-class">.list</span> </span><br><span class="line">deb http:<span class="comment">//ppa.launchpad.net/ondrej/php/ubuntu xenial main</span></span><br></pre></td></tr></table></figure><p>We can now install the rest of the PHP modules needed:</p><figure class="hljs highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ apt-<span class="builtin-name">get</span> update</span><br><span class="line">$ apt-<span class="builtin-name">get</span> install php5.6-curl</span><br><span class="line">$ apt-<span class="builtin-name">get</span> install php5.6-mysql</span><br><span class="line">$ apt-<span class="builtin-name">get</span> install php5.6-gd</span><br><span class="line">$ apt-<span class="builtin-name">get</span> install php5.6-xml</span><br></pre></td></tr></table></figure><h2 id="Create-DB-and-DB-user"><a href="#Create-DB-and-DB-user" class="headerlink" title="Create DB and DB user"></a>Create DB and DB user</h2><p>Next, we need to setup the two databases that will be used by Drupal and CiviCRM. </p><p>From the MySQL cli (or any other method for manipulating the DBs, i.e. <a href="https://www.phpmyadmin.net/" target="_blank" rel="noopener">phpMyAdmin</a>):</p><p>Login to the MySQL server:</p><figure class="hljs highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>mysql -p</span><br></pre></td></tr></table></figure><p>Create the Drupal DB and user and grant the user full privileges over the DB</p><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> drupaldb;</span><br><span class="line">$ <span class="keyword">CREATE</span> <span class="keyword">USER</span> drupaluser <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</span><br><span class="line">$ <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> drupaldb.* <span class="keyword">TO</span> drupaluser;</span><br><span class="line">$ <span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span></span><br></pre></td></tr></table></figure><p>same for CiviCRM …</p><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> civicrm;</span><br><span class="line">$ <span class="keyword">CREATE</span> <span class="keyword">USER</span> civicrm <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</span><br><span class="line">$ <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> civicrm.* <span class="keyword">TO</span> civicrm;</span><br><span class="line">$ <span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><h2 id="Download-the-installer-packages"><a href="#Download-the-installer-packages" class="headerlink" title="Download the installer packages"></a>Download the installer packages</h2><p>It’s time to download the Drupal 7 installation packages to our AWS EC2 instance and place those in the nginx web root directory:</p><figure class="hljs highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>cd /var/www/html/</span><br><span class="line"><span class="variable">$ </span>wget <span class="symbol">https:</span>/<span class="regexp">/ftp.drupal.org/files</span><span class="regexp">/projects/drupal</span>-<span class="number">7.60</span>.tar.gz</span><br><span class="line"><span class="comment"># Extract the archive</span></span><br><span class="line"><span class="variable">$ </span>tar -xzvf drupal-<span class="number">7.60</span>.tar.gz</span><br><span class="line"><span class="variable">$ </span>mv drupal-<span class="number">7.60</span>/* .</span><br></pre></td></tr></table></figure><p>Set the permissions on the <code>/var/www/html/</code> directory:</p><figure class="hljs highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chown -<span class="type">R</span> www-<span class="class"><span class="keyword">data</span>:www-<span class="keyword">data</span> /var/www/html</span></span><br></pre></td></tr></table></figure><h2 id="Install-and-Setup-Drupal"><a href="#Install-and-Setup-Drupal" class="headerlink" title="Install and Setup Drupal"></a>Install and Setup Drupal</h2><p>At this point you should have the installation page available for you when you access it via your public IP address of your instance or your domain name (if you have setup one and pointed it’s A DNS record correctly) </p><h2 id="Verify-installation"><a href="#Verify-installation" class="headerlink" title="Verify installation"></a>Verify installation</h2><p>After running through the installer and configuring the DB and setting up your Drupal site, verify that the site is working as expected by visiting it via your configured domain name.</p><h2 id="Install-CiviCRM-5-for-Drupal"><a href="#Install-CiviCRM-5-for-Drupal" class="headerlink" title="Install CiviCRM 5 for Drupal"></a>Install CiviCRM 5 for Drupal</h2><p>Next we need to get the CiviCRM installation packages.</p><p>Go to your AWS instance and start by typing:</p><figure class="hljs highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># first become root, and then ...</span></span><br><span class="line"><span class="variable">$ </span>cd /var/www/html/sites/all/modules/</span><br><span class="line"><span class="variable">$ </span>wget <span class="symbol">https:</span>/<span class="regexp">/download.civicrm.org/civicrm</span>-<span class="number">5.6</span>.<span class="number">1</span>-drupal.tar.gz</span><br><span class="line"><span class="variable">$ </span>tar -xzvf civicrm-<span class="number">5.6</span>.<span class="number">1</span>-drupal.tar.gz</span><br><span class="line"><span class="comment"># fix the permissions </span></span><br><span class="line"><span class="variable">$ </span>chown www-data. . -R</span><br></pre></td></tr></table></figure><p>You should now be ready to start the CiviCRM installer by pointing your browser to:</p><p><code>http://example.org/sites/all/modules/civicrm/install/index.php</code></p><p>Proceed with configuring CiviCRM database and Drupal settings as instructed in the official CiviCRM documentation available at:</p><p><a href="https://docs.civicrm.org/sysadmin/en/latest/install/drupal7/" target="_blank" rel="noopener">https://docs.civicrm.org/sysadmin/en/latest/install/drupal7/</a></p><h2 id="Enable-Drupal-Clean-URLs-with-nginx"><a href="#Enable-Drupal-Clean-URLs-with-nginx" class="headerlink" title="Enable Drupal Clean URLs with nginx"></a>Enable Drupal Clean URLs with nginx</h2><p>There might be additional need to configure the nginx service to support Drupal <code>Clean URLs</code> which is URLs like:</p><p><a href="https://compucorp.kubemasters.com/admin/setting/uf?reset=1" target="_blank" rel="noopener">https://compucorp.kubemasters.com/admin/setting/uf?reset=1</a></p><p>In order for this to work, you need to adjust the backend configuration of your nginx one more and add the following , replacing the default location match rule:</p><figure class="hljs highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="comment"># First attempt to serve request as file, then</span></span><br><span class="line">        <span class="comment"># as directory, then fall back to displaying a 404.</span></span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ =<span class="number">404</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>with the following:</p><figure class="hljs highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    root /var/www/html; # Replace this with the path <span class="keyword">to</span> your instance, <span class="keyword">if</span> <span class="keyword">not</span> default</span><br><span class="line">    index  index.php;</span><br><span class="line">    error_page 404 = @drupal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location @drupal &#123;</span><br><span class="line">    rewrite ^(.*)$ /index.php?<span class="attribute">q</span>=<span class="variable">$1</span> last;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>You can now enable Drupal Clean URLs by going to <code>Configuration &gt; Search and Metadata &gt; Clean URLs</code>:</p><p><img src="/static/drupal_cleanurls.png" alt="Drupal Clean URLs"></p><h2 id="Test-drive-CiviCRM"><a href="#Test-drive-CiviCRM" class="headerlink" title="Test-drive CiviCRM"></a>Test-drive CiviCRM</h2><p>After enabling clean URLs you should be able to visit the CiviCRM administration panel at:</p><p><code>http://example.org/civicrm</code></p><h2 id="Set-the-CiviCRM-extension-directory-using-settings-files-variables"><a href="#Set-the-CiviCRM-extension-directory-using-settings-files-variables" class="headerlink" title="Set the CiviCRM extension directory using settings files variables"></a>Set the CiviCRM extension directory using settings files variables</h2><p>For this task need to modify the configuration file of civicrm under Drupal’s root <code>sites/default/civicrm.settings.php</code></p><p>Go to that file and uncomment the line setting up the <code>extensionsDir</code> variable to make sure it looks similar to:</p><figure class="hljs highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Override the extensions directory.</span></span><br><span class="line">$civicrm_setting[<span class="string">'Directory Preferences'</span>][<span class="string">'extensionsDir'</span>] = <span class="string">'/var/www/html/civi_extensions'</span>;</span><br></pre></td></tr></table></figure><h2 id="Install-certificate-from-Let’s-encrypt"><a href="#Install-certificate-from-Let’s-encrypt" class="headerlink" title="Install certificate from Let’s encrypt"></a>Install certificate from Let’s encrypt</h2><p>At this point you should have both Drupal and CiviCRM working on a none secure plain HTTP connection.</p><p>This is not considered a good practice and tools as Let’s encrypt’s <code>CertBot</code> give us easy way to install certificate for our domain quick and easy.</p><p>Start of by adding the Certbot’s Ubuntu Xenial repository. Go to your AWS instance and type in:</p><figure class="hljs highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$<span class="built_in"> add-apt-repository </span>ppa:certbot/certbot <span class="comment"># be root, or add `sudo` in the beginning</span></span><br><span class="line">$ apt-get install python-certbot-nginx</span><br><span class="line"><span class="comment"># start certbot as root</span></span><br><span class="line">$ certbot --nginx</span><br></pre></td></tr></table></figure><p>Then simply follow up the wizard which will ask you a couple of questions and then do it’s magic to issue and get and configure the SSL certificate on your nginx service.</p><p>Further instructions and usages on Let’s encrypt CertBot are available at:</p><p><a href="https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx" target="_blank" rel="noopener">https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx</a></p><p>After finishing the setup, just reload your nginx with:</p><figure class="hljs highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>systemctl reload nginx.service</span><br></pre></td></tr></table></figure><p>and you should be able to point your browser securely to:</p><p><code>https://example.com</code></p><p>where your site resides and a secure connection should be established.</p><h2 id="Force-nginx-to-redirect-all-connections-to-HTTPS"><a href="#Force-nginx-to-redirect-all-connections-to-HTTPS" class="headerlink" title="Force nginx to redirect all connections to HTTPS"></a>Force nginx to redirect all connections to HTTPS</h2><p>It is possible to force all connections on a none secure HTTP port to a HTTPS one. CertBot should do this for you, if you pointed that it’s an nginx engine running behind, but just in case, you should make sure that the default nginx backend has this block in the configuration:</p><figure class="hljs highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$host</span> = example.com) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span> ;</span><br><span class="line">        <span class="attribute">listen</span> [::]:<span class="number">80</span> ;</span><br><span class="line">    <span class="attribute">server_name</span> example.com;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">404</span>; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Configure-Drupal-to-use-private-files-and-secure-it-within-nginx"><a href="#Configure-Drupal-to-use-private-files-and-secure-it-within-nginx" class="headerlink" title="Configure Drupal to use private files and secure it within nginx"></a>Configure Drupal to use private files and secure it within nginx</h2><p>Enable Drupal private files storage by going to <code>Configuration &gt; Media &gt; File System</code>:</p><p><img src="/static/priv1.png" alt="File System"></p><p>then set the <code>Private file system path</code> to the path where you would like Drupal to store any private file:</p><p><img src="/static/priv2.png" alt="private files"></p><p>We’ll store the Drupal private files in</p><p><code>/var/www/html/sites/default/files/private</code> </p><p>In order for this to be secure within our Nginx configuration we need to add the following <code>location</code> match nginx rule to prevent the private files from being accessible directly from the web server, bypassing Drupal’s authorization process:</p><figure class="hljs highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">location ^~ <span class="regexp">/sites/</span><span class="keyword">default</span><span class="regexp">/files/</span><span class="keyword">private</span> &#123;</span><br><span class="line"> internal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Install-Drush-to-the-server-for-the-appropriate-user"><a href="#Install-Drush-to-the-server-for-the-appropriate-user" class="headerlink" title="Install Drush to the server for the appropriate user"></a>Install Drush to the server for the appropriate user</h2><p>To install the Drupal command line tool <code>drush</code> on your system, go to your command line and start with:</p><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https:<span class="comment">//github.com/drush-ops/drush/releases/download/8.1.17/drush.phar</span></span><br><span class="line">$ php drush<span class="selector-class">.phar</span> core-status</span><br><span class="line">$ chmod +x drush.phar</span><br><span class="line">$ sudo mv drush<span class="selector-class">.phar</span> /usr/local/bin/drush</span><br><span class="line">$ drush init</span><br></pre></td></tr></table></figure><p>Verify if <code>drush</code> was installed properly:</p><figure class="hljs highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ drush <span class="comment">--version</span></span><br><span class="line"> Drush Version   :  8.1.17</span><br></pre></td></tr></table></figure><p>You may need to logout and back in to reload your shell for the binary to be available.</p><h2 id="Modify-the-Drupal-settings-files-so-that-Drupal-views-can-use-the-CiviCRM-database"><a href="#Modify-the-Drupal-settings-files-so-that-Drupal-views-can-use-the-CiviCRM-database" class="headerlink" title="Modify the Drupal settings files so that Drupal views can use the CiviCRM database"></a>Modify the Drupal settings files so that Drupal views can use the CiviCRM database</h2><p>To accomplish this, we need to first install a couple of dependencies for Drupal to be able to use and create Views based on CiviCRM data.</p><p>Start by installing the Drupal Chaos Tools module by going to <code>Modules (top settings bar) &gt; Install New Module &gt; Install from a URL</code>:</p><p><img src="/static/modules.png" alt="modules"></p><p>and then put this URL to install from:</p><p><code>https://ftp.drupal.org/files/projects/ctools-7.x-1.14.tar.gz</code></p><p>After the installer completes, go-ahead and activate the module.</p><p>There’s one more dependency needed and that’s the Drupal Views module.</p><p>Follow the same module installation procedure as above but this time install from this URL:</p><p><code>https://ftp.drupal.org/files/projects/views-7.x-3.20.tar.gz</code></p><p>When done, go to the modules list on your site and activate the Views module.</p><p>source: <a href="https://docs.civicrm.org/sysadmin/en/latest/integration/drupal/views/" target="_blank" rel="noopener">https://docs.civicrm.org/sysadmin/en/latest/integration/drupal/views/</a></p>]]></content>
      
      
      <categories>
          
          <category> tutorials </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aws </tag>
            
            <tag> drupal  </tag>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
            <tag> civicrm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>linux</title>
      <link href="/linux/index-1.html"/>
      <url>/linux/index-1.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes</title>
      <link href="/kubernetes/index-1.html"/>
      <url>/kubernetes/index-1.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes</title>
      <link href="/kubernetes/index.html"/>
      <url>/kubernetes/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>linux</title>
      <link href="/linux/index.html"/>
      <url>/linux/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
